{"version":3,"sources":["assets\\script\\game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","score","displayName","tooltip","scoreDisplay","Label","scoreAudio","url","AudioClip","timeDisplay","leftButton","rightButton","onLoad","groundY","y","height","spawnNewStar","on","EventType","TOUCH_START","onleftTouchStart","TOUCH_END","onleftTouchEnd","onrightTouchStart","onrightTouchEnd","timer","getComponent","onKeyout","KEY","left","onKeyin","right","gainScore","string","audioEngine","playEffect","newStar","instantiate","setPosition","getNewStarPosition","node","addChild","game","starDuration","Math","random","randX","randY","jumpHeight","maxX","width","log","v2","update","dt","minX","x","gameOver","parseInt","stopAllActions","director","loadScene"],"mappings":"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","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n \r\n    properties: {\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        //游戏的得分\r\n        score: {\r\n            default: 0,\r\n            displayName: \"Score (player)\",\r\n            tooltip: \"The score of player\"\r\n        },\r\n\t\t//游戏得分的显示\r\n\t\tscoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n\t\t// 得分音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n\t\t// 剩余时间显示\r\n\t\ttimeDisplay: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Label\r\n\t\t},\r\n\t\t// 给左右按钮传递玩家的引用\r\n\t\tleftButton:  {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t},\r\n\t\trightButton:  {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t}\r\n\t\t\r\n\t\t\t\r\n    },\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n\t\t// 用于二段跳的测试\r\n\t\t// this.player.getComponent('player').game=this;\r\n\t\t// 用于左右触控按钮传递信息给player \r\n        this.leftButton.on(cc.Node.EventType.TOUCH_START, this.onleftTouchStart, this);\r\n        this.leftButton.on(cc.Node.EventType.TOUCH_END, this.onleftTouchEnd, this);\r\n        this.rightButton.on(cc.Node.EventType.TOUCH_START, this.onrightTouchStart, this);\r\n        this.rightButton.on(cc.Node.EventType.TOUCH_END, this.onrightTouchEnd, this);\r\n\t\t\r\n\t\t// 初始化星星消失时间的计时器\r\n        this.timer = 0;\r\n    },\r\n    \r\n    onleftTouchEnd:function() {\r\n        this.player.getComponent('player').onKeyout(cc.KEY.left);\r\n    },\r\n    \r\n    onleftTouchStart:function() {\r\n        this.player.getComponent('player').onKeyin(cc.KEY.left);\r\n    },\r\n\r\n    onrightTouchEnd:function() {\r\n        this.player.getComponent('player').onKeyout(cc.KEY.right);\r\n    },\r\n    \r\n    onrightTouchStart:function() {\r\n        this.player.getComponent('player').onKeyin(cc.KEY.right);\r\n    },\r\n\r\n\tgainScore: function() {\r\n\t\tthis.score += 1;\r\n\t\tthis.scoreDisplay.string = 'Score:' + this.score;\r\n\t\tcc.audioEngine.playEffect(this.scoreAudio, false);\r\n\t},\r\n\t\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n\t\t// 给星星提供game场景的引用，使得星星可以获取玩家的位置，判断自己是否被捕捉到了\r\n\t\tnewStar.getComponent('star').game = this;\r\n\t\t// 重置星星消失的计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标 \r\n\t\tvar randY = this.groundY + Math.random() * this.player.getComponent('player').jumpHeight;\r\n        \r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n\t\tcc.log('randY is'+randY);\r\n\t\tcc.log('this.groundY is '+ this.groundY);\r\n        // 返回星星坐标\r\n        return cc.v2(randX, randY);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n\t\t// 如果主角的位置到了屏幕边界，就从屏幕另一边出来\r\n\t\tvar maxX = this.node.width/2;\r\n\t\tvar minX = 0-maxX;\r\n\t\tif(this.player.getComponent('player').node.x > maxX)\r\n\t\t\tthis.player.getComponent('player').node.x = minX;\r\n\t\telse if(this.player.getComponent('player').node.x < minX)\r\n\t\t\tthis.player.getComponent('player').node.x = maxX;\r\n\t\t\r\n\t\t// 如果主角一定时间没有捉到星星，游戏结束了\r\n\t\tif (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n\t\tthis.timeDisplay.string = 'TimeLeft:' + (parseInt(this.starDuration - this.timer));\r\n    },\r\n\t\r\n\tgameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n\t\t\r\n        cc.director.loadScene('game');//管理游戏逻辑流程的单例对象，这里是游戏重新开始\r\n    }\r\n});\r\n\r\n\r\n"]}