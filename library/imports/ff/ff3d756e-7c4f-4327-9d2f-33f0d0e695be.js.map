{"version":3,"sources":["assets\\script\\player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","disaccel","jumpAudio","default","url","AudioClip","onLoad","node","runAction","setJumpAction","accLeft","accRight","firstJump","secondJump","firstJumpFinish","secondJumpFinish","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpDownCallback","repeatForever","sequence","audioEngine","playEffect","onKeyin","keyCode","KEY","left","right","onKeyout","event","update","dt","Math","abs","x"],"mappings":"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","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        // 摩擦力 \r\n        disaccel:0,\r\n\t\t// 跳跃音效资源\r\n        jumpAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        }\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.node.runAction(this.setJumpAction());\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n\t\tthis.firstJump = false;\r\n\t\tthis.secondJump = false;\r\n\t\tthis.firstJumpFinish = false;\r\n\t\tthis.secondJumpFinish = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n    \r\n\r\n        // 初始化键盘输入监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);     \r\n       \r\n    },\r\n    \r\n    onDestroy() {\r\n        // 取消键盘输入监听\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n    \r\n    setJumpAction: function () {\r\n\t\t//cc.log('jump to'+this.jumpHeight);\r\n\t\t//cc.log('player y is'+this.node.y);\r\n        \r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 落下来之后播放落地的声音，然后取消二段跳的状态\r\n\t\tvar callback = cc.callFunc(this.playJumpDownCallback, this);\t\t\r\n\t\t// 不断重复\r\n\t\treturn cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n\t\r\n\tplayJumpDownCallback: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n\t\t// 取消二段跳  \r\n\t\t//this.firstJump = false;\r\n\t\t//this.secondJump = false;\r\n    },\r\n    \r\n\t \r\n    onKeyin(keyCode) {\r\n        switch(keyCode) {\r\n            case cc.KEY.left:\r\n                this.accLeft = true; \r\n                break;\r\n            case cc.KEY.right:\r\n                this.accRight = true;\r\n                break;\t            \r\n        }\r\n    },\t \r\n    onKeyout(keyCode) {\r\n        switch(keyCode) {\r\n            case cc.KEY.left:\r\n                this.accLeft = false; \r\n                break;\r\n            case cc.KEY.right:\r\n                this.accRight = false;\r\n                break;\t            \r\n        }\r\n    },\r\n    \r\n    onKeyDown(event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.KEY.left:\r\n                this.accLeft = true; \r\n                break;\r\n            case cc.KEY.right:\r\n                this.accRight = true;\r\n                break;\r\n            //case cc.KEY.space:\r\n\t\t\t////一段跳和二段跳的起手应该在按键时候触发，结束则应该是落下地面时候结束\r\n            //    if(this.firstJump && this.secondJump)\r\n            //        ;\r\n            //    else if(this.firstJump)\r\n\t\t\t//\t{\r\n            //        this.secondJump = true;\r\n\t\t\t//\t\tthis.secondJumpFinish = false;\r\n\t\t\t//\t}\r\n            //    else\r\n\t\t\t//\t{\r\n            //        this.firstJump = true;\r\n\t\t\t//\t\tthis.firstJumpFinish = false;\r\n\t\t\t//\t}\r\n            //    break;\r\n\t\t\t\r\n            \r\n        }\r\n    },\r\n    \r\n     onKeyUp(event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.KEY.left:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.KEY.right:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n    \r\n    // called every frame, uncomment this function to activate update callback\r\n     update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        } else\r\n        {//不操作应该逐渐减速\r\n            if(this.xSpeed > 0 && this.xSpeed-this.disaccel > 0 )\r\n                this.xSpeed -= this.disaccel;\r\n            else if(this.xSpeed < 0 && this.xSpeed+this.disaccel < 0)\r\n                this.xSpeed += this.disaccel;\r\n            else\r\n                this.xSpeed = 0;\r\n        }\r\n\t\t//if(this.secondJump)\r\n\t\t//{\r\n\t\t//\tif(this.secondJumpFinish==false)\r\n\t\t//\t{\r\n\t\t//\t\tthis.y += this.jumpHeight/4;//fixme\r\n\t\t//\t\tthis.game.gainScore();//fixme\r\n\t\t//\t\tthis.secondJumpFinish=true;\r\n\t\t//\t} \r\n\t\t//}\r\n\t\t//else if(this.firstJump)\r\n\t\t//{\r\n\t\t//\tif(this.firstJumpFinish==false)\r\n\t\t//\t{\r\n\t\t//\t\tthis.y += this.jumpHeight/2;//fixme\r\n\t\t//\t\tthis.game.gainScore();//fixme\r\n\t\t//\t\tthis.firstJumpFinish=true;\r\n\t\t//\t} \r\n\t\t//}\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n        \r\n\t\t\r\n\t\t\r\n    },\r\n    \r\n});\r\n"]}